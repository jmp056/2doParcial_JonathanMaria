@page "/RegistroLlamadas"
@using _2doParcial_JonathanMaria.Controllers;
@using _2doParcial_JonathanMaria.Models;

    <EditForm Model="Llamada" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />

        <h1>Registro de llamadas</h1>

        <div class="form-row">
            <div class="form-group col-10">
                <label for="LlamadaId">Codigo de la llamada</label>
                <div class="form-inline">
                    <InputNumber @bind-Value="Llamada.LlamadaId" class="form-control" />
                    <button type="button" class="btn btn-outline-dark text-center" style="margin: 10px" @onclick="Buscar">Buscar</button>
                </div>

            </div>

        </div>


        <div class="form-group">
            <label for="Descripcion">Descripcion</label>
            <InputText @bind-Value="Llamada.Descripcion" class="form-control col-11" />
            <ValidationMessage For="@(() => Llamada.Descripcion)" />
        </div>

        <div class="form-row">
            <div class="form-group col-5">
                <label for="Problema">Problema</label>
                <InputText @bind-Value="LlamadaDetalle.Problema" class="form-control" />
            </div>
            <div class="form-group col-6">
                <label for="Problema">Solucion</label>
                <div class="form-inline">
                    <InputText @bind-Value="LlamadaDetalle.Solucion" class="form-control col-9" />
                    <button type="button" class="btn btn-outline-warning text-center" style="margin: 3px" @onclick="AgregarContenido">Agregar</button>
                </div>
            </div>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <th>Codigo</th>
                    <th>Problema</th>
                    <th>Solucion</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Llamada.Detalle)
                {
                    <tr>
                        <td>@item.LlamadaDetalleId</td>
                        <td>@item.Problema</td>
                        <td>@item.Solucion</td>
                    </tr>
                }
            </tbody>
        </table>

        <h3>@Mensaje</h3>

        <div class="text-center">
            <button type="button" class="btn btn-outline-primary" @onclick="LimpiarLlamada">Limpiar</button>
            <button type="submit" class="btn btn-outline-success">Guardar</button>
            <button type="button" class="btn btn-outline-danger" @onclick="Eliminar">Eliminar</button>
        </div>
    </EditForm>

@code{
    Llamadas Llamada = new Llamadas();
    LlamadasDetalles LlamadaDetalle = new LlamadasDetalles();
    string Mensaje = string.Empty;

    private void Guardar()
    {
        LlamadasController llamadasController = new LlamadasController();
        Llamadas LlamadaTemporal = llamadasController.Buscar(Llamada.LlamadaId);


        if (Llamada.LlamadaId == 0 || LlamadaTemporal != null)
        {
            if(Llamada.Detalle.Count > 0)
            {
                if (llamadasController.Guardar(Llamada))
                {
                    LimpiarLlamada();
                    Mensaje = "Llamada guarda de manera exitosa!";

                }
                else
                {
                    Mensaje = "La llamada no se pudo guardar!";

                }
            }
            else
            {
                Mensaje = "La llamada debe contener al menos una solucion y un problema!";

            }

        }
        else
        {
            Mensaje = "La llamada no se pudo guardar!";

        }


    }

    private void Buscar()
    {
        LlamadasController llamadasController = new LlamadasController();
        Llamadas LlamadaTemporal = llamadasController.Buscar(Llamada.LlamadaId);

        if (LlamadaTemporal != null)
        {
            Llamada = LlamadaTemporal;

        }
        else
        {
            LimpiarLlamada();
            Mensaje = "Esta llamada no existe";

        }
    }

    public void Eliminar()
	{
        LlamadasController llamadasController = new LlamadasController();
        Llamadas LlamadaTemporal = new Llamadas(); 

		LlamadaTemporal = llamadasController.Buscar(Llamada.LlamadaId);

		if (LlamadaTemporal != null)
		{
			llamadasController.Eliminar(LlamadaTemporal.LlamadaId);
			LimpiarLlamada();
			Mensaje = "Llamada Eliminada de manera exitosa!";
		}
		else
		{
			LimpiarLlamada();
			Mensaje = "La llamada no pudo ser eliminada!";
		}
	}

    public void AgregarContenido()
    {
        if (LlamadaDetalle.Problema == string.Empty)
        {
            Mensaje = "Debe plantear un problema!";

        }
        else if (LlamadaDetalle.Solucion == string.Empty)
        {
            Mensaje = "Debe plantear una solucion!";

        }
        else
        {
            Llamada.Detalle.Add(new LlamadasDetalles()
            {
                LlamadaDetalleId = 0,
                Problema = LlamadaDetalle.Problema,
                Solucion = LlamadaDetalle.Solucion

            });
            
            LimpiarDetalle();
        }


    }

    private void LimpiarLlamada()
    {
        Llamada = new Llamadas();
        Mensaje = string.Empty;
        LimpiarDetalle();
    }

    private void LimpiarDetalle()
    {
        LlamadaDetalle = new LlamadasDetalles();
         Mensaje = string.Empty;
    }

}